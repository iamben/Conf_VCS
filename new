#!/bin/sh
PATH=/bin:/usr/bin

CONFLIST=".csh .cshrc .gitconfig .muttrc .screenrc .ssh/authorized_keys .vim .vimrc .zsh .zshrc .erlang .pythonstartup .tmux.conf bin/ssh-auth-sock"
SOURCEDIR=""
PLISTDIR=""

Usage() {
    echo "Usage: $0 install [source-dir]"
    echo "Usage: $0 uninstall [plist-dir]"
    echo
    echo "source-dir: directory for config source (default: \$PWD)"
    echo "plist-dir: directory contains plist (default: source-dir)"
}

BackupExistingConf() {
    if [ -e "$1" -a ! -L "$1" ]; then
        echo "Backing up regular file: $1 -> $1.bak"
        mv -f "$1" "$1.bak"
    fi
}

ProvisionInstallDirectory() {
    for conf in ${CONFLIST}; do
        if [ "${conf##*/}" != "${conf}" -a ! -e "${HOME}/${conf%/*}" ]; then # link installed into a dir
            echo "Pre-provisioning directory: ${HOME}/${conf%/*}"
            mkdir -p "${HOME}/${conf%/*}"
        fi
    done
}

if [ -z "$1" ]; then
    Usage
    exit
fi

case $1 in
[Ii]|[Ii][Nn][Ss][Tt][Aa][Ll][Ll])
    # uninstall first
    $0 uninstall $2

    # determine source-dir
    SOURCEDIR="$2"
    if [ -z "${SOURCEDIR}" ]; then
        SOURCEDIR="`pwd -L`"
    fi
    echo "Install using source-dir: ${SOURCEDIR}"

    # provision install dir first
    ProvisionInstallDirectory

    # install them
    for link in ${CONFLIST}; do
        # be sure to backup
        BackupExistingConf "${HOME}/${link}"

        echo "Installing link: ${HOME}/${link} -> ${SOURCEDIR}/${link}"
        ln -sfn "${SOURCEDIR}/${link}" "${HOME}/${link}"
        echo ${HOME}/${link} >> ${SOURCEDIR}/plist
    done
    ;;
[Uu]|[Uu][Nn][Ii][Nn][Ss][Tt][Aa][Ll][Ll])
    # determine plist-dir
    PLISTDIR="$2"
    if [ -z "${PLISTDIR}" ]; then
        PLISTDIR="`pwd -L`"
    fi

    if [ -f ${PLISTDIR}/plist ]; then
        echo "Uninstall using plist file: ${PLISTDIR}/plist"
        for link in `cat ${PLISTDIR}/plist`; do
            if [ -L "${link}" ]; then
                echo "Removing installed component: ${link}"
                unlink "${link}"

                # revert the backup
                if [ -e "${link}.bak" ]; then
                    echo "Reverting backup: ${link}.bak"
                    mv -n "${link}.bak" "${link}"
                fi
            else
                echo "Component: ${link} has been changed, ignoring..."
            fi
        done

        rm -f ${PLISTDIR}/plist
    fi

    echo "To completely remove these configurations, please manually remove ${PWD}"
    ;;
*)
    echo "Unsupported operation: $1"
    Usage
    echo "Exiting..."
    exit 1
    ;;
esac

exit 0
